<ResourceDictionary x:Class="TheRThemes.ColourfulLightTheme"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    <!-- Window Colours. Background, Border and TitleBar colours. -->
    <SolidColorBrush x:Key="BackgroundColour"  Color="#FFF8F8F8" />
    <SolidColorBrush x:Key="WindowBorderColour"  Color="White" />
    <SolidColorBrush x:Key="WindowTitleColour"  Color="WhiteSmoke" />

    <!-- Control colour themes. dont mess with em okay unless youre good at styles -->
    <!-- Complete DarkTheme Colours -->
    <SolidColorBrush x:Key="TransparentBrush" Color="Transparent"/>
    <SolidColorBrush x:Key="ContainerBackground" Color="WhiteSmoke"/>
    <SolidColorBrush x:Key="ContainerBorder" Color="#FFE8E8E8"/>
    <SolidColorBrush x:Key="ControlDefaultForeground"  Color="#F6F6F6" />
    <SolidColorBrush x:Key="ControlMOSelectForeground"  Color="#FF040404" />

    <SolidColorBrush x:Key="ControlDarkerBackground"             Color="#FFC7C7C7"/>
    <SolidColorBrush x:Key="ControlDarkerBorderBrush"            Color="#FFBEBEBE"/>
    <SolidColorBrush x:Key="ControlDefaultBackground"            Color="#FFE0E0E0"/>
    <SolidColorBrush x:Key="ControlDefaultBorderBrush"           Color="#FFACACAC"/>
    <SolidColorBrush x:Key="ControlBrightDefaultBackground"      Color="#FFCDCDCD"/>
    <SolidColorBrush x:Key="ControlBrightDefaultBorderBrush"     Color="#FFAFAFAF"/>
    <SolidColorBrush x:Key="ControlDisabledBackground"           Color="#FFB4B4B4"/>
    <SolidColorBrush x:Key="ControlDisabledBorderBrush"          Color="#FF8C8C8C"/>
    <SolidColorBrush x:Key="ControlMouseOverBackground"          Color="#FFD2D2D2"/>
    <SolidColorBrush x:Key="ControlMouseOverBorderBrush"         Color="#FFBEBEBE"/>
    <SolidColorBrush x:Key="ControlSelectedBackground"           Color="#FFE0E0E0"/>
    <SolidColorBrush x:Key="ControlSelectedBorderBrush"          Color="#FFCCCCCC"/>
    <SolidColorBrush x:Key="ControlSelectedMouseOverBackground"  Color="Gainsboro"/>
    <SolidColorBrush x:Key="ControlSelectedMouseOverBorderBrush" Color="#FFB9B9B9"/>
    <SolidColorBrush x:Key="ControlGlythColour"                  Color="#FF0A0A0A"/>
    <SolidColorBrush x:Key="ControlMouseOverGlythColour"         Color="#FF212121"/>
    <SolidColorBrush x:Key="ControlSelectedGlythColour"          Color="#FF191919"/>
    <SolidColorBrush x:Key="ControlDisabledGlythColour"          Color="#FF666666"/>

    <!-- Colourful theme  Colours -->

    <SolidColorBrush x:Key="ControlPrimaryDarkerBackground"             Color="#FF64BEFF"/>
    <SolidColorBrush x:Key="ControlPrimaryDarkerBorderBrush"            Color="#FF50B4FF"/>
    <SolidColorBrush x:Key="ControlPrimaryDefaultBackground"            Color="#FF78C8FF"/>
    <SolidColorBrush x:Key="ControlPrimaryDefaultBorderBrush"           Color="#FF64BEFF"/>
    <SolidColorBrush x:Key="ControlPrimaryBrightDefaultBackground"      Color="#FF8CD2FF"/>
    <SolidColorBrush x:Key="ControlPrimaryBrightDefaultBorderBrush"     Color="#FF78C8FF"/>
    <SolidColorBrush x:Key="ControlPrimaryDisabledBackground"           Color="#FFB9E1FF"/>
    <SolidColorBrush x:Key="ControlPrimaryDisabledBorderBrush"          Color="#FFAFD7FF"/>
    <SolidColorBrush x:Key="ControlPrimaryMouseOverBackground"          Color="#FFA0DCFF"/>
    <SolidColorBrush x:Key="ControlPrimaryMouseOverBorderBrush"         Color="#FF96D2FF"/>
    <SolidColorBrush x:Key="ControlPrimarySelectedBackground"           Color="#FFB4E6FF"/>
    <SolidColorBrush x:Key="ControlPrimarySelectedBorderBrush"          Color="#FFA0DCFF"/>
    <SolidColorBrush x:Key="ControlPrimarySelectedMouseOverBackground"  Color="#FFAFE1FF"/>
    <SolidColorBrush x:Key="ControlPrimarySelectedMouseOverBorderBrush" Color="#FFAAD2FF"/>

    <SolidColorBrush x:Key="ControlPrimaryCaretSelectionBackground"     Color="#FF5AAFFF"/>
    <SolidColorBrush x:Key="ControlPrimaryCaretBackground"              Color="#FF50B4FF"/>
    <SolidColorBrush x:Key="ControlPrimaryGlythColour"                  Color="#FF4BAFFF"/>
    <SolidColorBrush x:Key="ControlPrimaryMouseOverGlythColour"         Color="#FF5AB4FF"/>
    <SolidColorBrush x:Key="ControlPrimarySelectedGlythColour"          Color="#FF6EB4FF"/>
    <SolidColorBrush x:Key="ControlPrimarySelectedMouseOverGlythColour" Color="#FF69AFFF"/>
    <SolidColorBrush x:Key="ControlPrimaryDisabledGlythColour"          Color="#FF192864"/>

    <!-- Setup Stuff -->

    <!-- Focus Visual -->
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle StrokeDashArray="1 2" 
                               StrokeThickness="1" 
                               Stroke="{StaticResource ControlPrimaryBrightDefaultBorderBrush}"
                               SnapsToDevicePixels="true" 
                               Margin="2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- -->

    <!-- Controls all in Order in toolbox -->

    <!-- Button -->
    <Style TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ControlDefaultBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlDefaultBorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="true"
                            HorizontalAlignment="Stretch" 
                            VerticalAlignment="Stretch">
                        <ContentPresenter x:Name="contentPresenter" 
                                          Focusable="False" 
                                          Margin="{TemplateBinding Padding}" 
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ControlMouseOverBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ControlPrimaryMouseOverBackground}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ControlPrimaryMouseOverBorderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ControlMOSelectForeground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ControlPrimarySelectedBackground}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ControlPrimarySelectedBorderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ControlMOSelectForeground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ControlBrightDefaultBackground}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ControlBrightDefaultBorderBrush}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ControlDisabledGlythColour}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RoundedCorners" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ControlDefaultBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlDefaultBorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="true"
                            HorizontalAlignment="Stretch" 
                            VerticalAlignment="Stretch"
                            CornerRadius="2">
                        <ContentPresenter x:Name="contentPresenter" 
                                          Focusable="False" 
                                          Margin="{TemplateBinding Padding}" 
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ControlMouseOverBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                            <Setter Property="Background" TargetName="border" Value="#3A36F4"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#3A36F4"/>
                            
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ControlPrimarySelectedBackground}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ControlPrimarySelectedBorderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ControlMOSelectForeground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ControlBrightDefaultBackground}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ControlBrightDefaultBorderBrush}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ControlDisabledGlythColour}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EditorButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ControlDefaultBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlDefaultBorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="true"
                            HorizontalAlignment="Stretch" 
                            VerticalAlignment="Stretch"
                            CornerRadius="2">
                        <ContentPresenter x:Name="contentPresenter" 
                                          Focusable="False" 
                                          Margin="{TemplateBinding Padding}" 
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ControlMouseOverBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                            <Setter Property="Background" TargetName="border" Value="#3A36F4"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#3A36F4"/>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ControlPrimarySelectedBackground}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ControlPrimarySelectedBorderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ControlMOSelectForeground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ControlBrightDefaultBackground}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ControlBrightDefaultBorderBrush}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ControlDisabledGlythColour}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="GenerateButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ControlDefaultBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlDefaultBorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="true"
                            HorizontalAlignment="Stretch" 
                            VerticalAlignment="Stretch">
                        <ContentPresenter x:Name="contentPresenter" 
                                          Focusable="False" 
                                          Margin="{TemplateBinding Padding}" 
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ControlMouseOverBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                            <Setter Property="Background" TargetName="border" Value="#FFA57E"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="White"/>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ControlPrimarySelectedBackground}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ControlPrimarySelectedBorderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ControlMOSelectForeground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ControlBrightDefaultBackground}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ControlBrightDefaultBorderBrush}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ControlDisabledGlythColour}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- -->


    <!-- WindowTemplates -->
    <ControlTemplate x:Key="WindowTemplateKey" TargetType="{x:Type Window}">
        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                Background="{TemplateBinding Background}">
            <Grid>
                <AdornerDecorator>
                    <ContentPresenter/>
                </AdornerDecorator>
                <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="false"
                            Visibility="Visible" VerticalAlignment="Bottom"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                    <Condition Property="WindowState" Value="Normal"/>
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!-- Simple Win32 Window style -->
    <Style x:Key="MainWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Background" Value="{StaticResource BackgroundColour}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <AdornerDecorator>
                            <ContentPresenter/>
                        </AdornerDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                <Setter Property="Template" Value="{StaticResource WindowTemplateKey}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Custom Window style (unaffected by win32 style stuff) -->
    <Style x:Key="CustomWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="BorderBrush" Value="{StaticResource WindowBorderColour}" />
        <Setter Property="Background" Value="{StaticResource BackgroundColour}" />
        <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
        <Setter Property="WindowStyle" Value="SingleBorderWindow"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="26"
                              ResizeBorderThickness="6"
                              CornerRadius="0"
                              GlassFrameThickness="1"
                              NonClientFrameEdges="None"
                              UseAeroCaptionButtons="False"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <AdornerDecorator Margin="0,30,0,0">
                                    <ContentPresenter />
                                </AdornerDecorator>
                                <Grid Height="Auto" x:Name="titlebar" Background="{TemplateBinding BorderBrush}" VerticalAlignment="Top" Margin="0">
                                    <DockPanel  Grid.Column="0">
                                        <Image HorizontalAlignment="Left" VerticalAlignment="Top" Margin="8,4,0,0" Source="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" Height="24"  />
                                        <StackPanel Orientation="Horizontal"
                                        Grid.Column="1" HorizontalAlignment="Right">
                                            <Button x:Name="btnMinimize"
                                                Background="Transparent"
                                                BorderBrush="Transparent"
                                                Width="45"
                                                VerticalContentAlignment="Bottom"
                                                WindowChrome.IsHitTestVisibleInChrome="True" 
                                                Click="Minimize_Event">
                                                <Rectangle Width="10" 
                                                       VerticalAlignment="Center" 
                                                       Margin="1 1 0 0" 
                                                       Stroke="{StaticResource ControlGlythColour}" 
                                                       StrokeThickness="0.8"/>
                                            </Button>
                                            <Button x:Name="btnRestore"
                                                Background="Transparent"
                                                BorderBrush="Transparent"
                                                Width="45"
                                                WindowChrome.IsHitTestVisibleInChrome="True" 
                                                Click="AutoMinimize_Event">
                                                <Grid Width="12" Height="12">
                                                    <Rectangle StrokeThickness="0.8" 
                                                           Stroke="{StaticResource ControlGlythColour}"
                                                           Margin="3,0,0,3"/>
                                                    <Rectangle StrokeThickness="0.8" 
                                                           Fill="{TemplateBinding BorderBrush}"
                                                           Stroke="{StaticResource ControlGlythColour}"
                                                           Margin="0 3 3 0"/>
                                                </Grid>
                                            </Button>
                                            <Button x:Name="btnClose"
                                                Background="Transparent"
                                                BorderBrush="Transparent"
                                                Template="{DynamicResource CloseWindowButton}"
                                                Width="45"
                                                WindowChrome.IsHitTestVisibleInChrome="True" 
                                                Click="CloseWindow_Event">
                                                <Grid Margin="0 1 0 0">
                                                    <Line X1="0" Y1="0" X2="11" Y2="11" Stroke="{StaticResource ControlGlythColour}" StrokeThickness="0.8" />
                                                    <Line X1="0" Y2="0" Y1="11" X2="11" Stroke="{StaticResource ControlGlythColour}" StrokeThickness="0.8" />
                                                </Grid>
                                            </Button>
                                        </StackPanel>
                                    </DockPanel>

                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="WindowState" Value="Maximized">
                <Setter Property="BorderThickness" Value="8"/>
            </Trigger>
            <Trigger Property="WindowState" Value="Normal">
                <Setter Property="BorderThickness" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Same window but auto maximize/minimize button removed. Tool window -->
    <Style x:Key="CustomToolWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="BorderBrush" Value="{StaticResource WindowBorderColour}" />
        <Setter Property="Background" Value="{StaticResource BackgroundColour}" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="WindowStyle" Value="SingleBorderWindow"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="26"
                              ResizeBorderThickness="0"
                              CornerRadius="0"
                              GlassFrameThickness="1"
                              NonClientFrameEdges="None"
                              UseAeroCaptionButtons="False"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <AdornerDecorator Margin="0,30,0,0">
                                    <ContentPresenter />
                                </AdornerDecorator>
                                <Grid Height="30" x:Name="titlebar"
                                      Background="{TemplateBinding BorderBrush}"
                                      VerticalAlignment="Top" Margin="0">
                                    <DockPanel Margin="0,0,130,0">
                                        <Image HorizontalAlignment="Left" VerticalAlignment="Top" Margin="4,4,0,0" Source="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" Height="24"  />
                                        <TextBlock Margin="5,3"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Stretch"
                                                   FontSize="14" Width="Auto"
                                                   Foreground="{StaticResource ControlDefaultForeground}"
                                                   Text="{Binding Title, RelativeSource={RelativeSource TemplatedParent}}"   
                                                   Grid.Column="1" TextAlignment="Left"/>
                                    </DockPanel>
                                    <StackPanel Orientation="Horizontal"
                                        Grid.Column="0" HorizontalAlignment="Right">
                                        <Button x:Name="btnMinimize"
                                                Background="Transparent"
                                                BorderBrush="Transparent"
                                                Template="{DynamicResource MinimizeWindowButton}"
                                                Width="45"
                                                VerticalContentAlignment="Bottom"
                                                WindowChrome.IsHitTestVisibleInChrome="True" 
                                                Click="Minimize_Event">
                                            <Rectangle Width="10"
                                                       VerticalAlignment="Center"
                                                       Margin="1 1 0 0" 
                                                       Stroke="{StaticResource ControlGlythColour}"
                                                       StrokeThickness="1"/>
                                        </Button>
                                        <Button x:Name="btnClose"
                                                Background="Transparent"
                                                BorderBrush="Transparent"
                                                Template="{DynamicResource CloseWindowButton}"
                                                Width="45"
                                                WindowChrome.IsHitTestVisibleInChrome="True" 
                                                Click="CloseWindow_Event">
                                            <Grid Margin="0 1 0 0">
                                                <Line X1="0" Y1="0" X2="11" Y2="11" Stroke="{StaticResource ControlGlythColour}" StrokeThickness="1" />
                                                <Line X1="0" Y2="0" Y1="11" X2="11" Stroke="{StaticResource ControlGlythColour}" StrokeThickness="1" />
                                            </Grid>
                                        </Button>
                                    </StackPanel>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="WindowState" Value="Maximized">
                <Setter Property="BorderThickness" Value="8"/>
            </Trigger>
            <Trigger Property="WindowState" Value="Normal">
                <Setter Property="BorderThickness" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>
 
    <!-- Gives the button light orange colour properties when mouseover/clicked -->
    <ControlTemplate x:Key="TemplateButton" TargetType="{x:Type Button}">
        <Border x:Name="border" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                Background="{TemplateBinding Background}" 
                SnapsToDevicePixels="true"
                HorizontalAlignment="Stretch" 
                VerticalAlignment="Stretch">
            <ContentPresenter x:Name="contentPresenter" 
                              Focusable="False" 
                              Margin="{TemplateBinding Padding}" 
                              RecognizesAccessKey="True" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ControlMouseOverBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="#F4CA8D"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#F4CA8D"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="#D3AF7E"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#D3AF7E"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="{StaticResource ControlBrightDefaultBackground}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ControlBrightDefaultBorderBrush}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ControlDisabledGlythColour}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <!-- Gives the button red colour properties when mouseover/clicked -->
    <ControlTemplate x:Key="CloseWindowButton" TargetType="{x:Type Button}">
        <Border x:Name="border" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                Background="{TemplateBinding Background}" 
                SnapsToDevicePixels="true"
                HorizontalAlignment="Stretch" 
                VerticalAlignment="Stretch">
            <ContentPresenter x:Name="contentPresenter" 
                              Focusable="False" 
                              Margin="{TemplateBinding Padding}" 
                              RecognizesAccessKey="True" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ControlMouseOverBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="#FFF01428"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#FFF01428"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="#FF940A14"/>
                <Setter Property="BorderBrush" TargetName="border" Value="#FF940A14"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="{StaticResource ControlBrightDefaultBackground}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ControlBrightDefaultBorderBrush}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ControlDisabledGlythColour}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <SolidColorBrush x:Key="ListBorder" Color="#828790"/>
    <Style TargetType="{x:Type TreeView}">
        <Setter Property="Background" Value="{StaticResource ContainerBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ContainerBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border x:Name="Bd" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="_tv_scrollviewer_" 
                                      Background="{TemplateBinding Background}" 
                                      CanContentScroll="false" Focusable="false" 
                                      Padding="{TemplateBinding Padding}" 
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" 
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ControlDisabledBackground}"/>
                        </Trigger>
                        <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                            <Setter Property="CanContentScroll" TargetName="_tv_scrollviewer_" Value="true"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF595959"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF262626"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF27C7F7"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="#FFCCEEFB"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF1CC4F7"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF82DFFB"/>
    <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="#FF818181"/>
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="Transparent" Height="16" Padding="5,5,5,5" Width="16">
                        <Path x:Name="ExpandPath" Data="{StaticResource TreeArrow}" Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}" Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}">
                            <Path.RenderTransform>
                                <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="RenderTransform" TargetName="ExpandPath">
                                <Setter.Value>
                                    <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}"/>
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}"/>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}"/>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="1,0,0,0"/>
        <Setter Property="Foreground" Value="{StaticResource ControlDefaultForeground}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander" 
                                      ClickMode="Press" 
                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" 
                                      Style="{StaticResource ExpandCollapseToggleStyle}"/>
                        <Border x:Name="Bd" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                Grid.Column="1" 
                                Padding="{TemplateBinding Padding}" 
                                SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="PART_Header"
                                              ContentSource="Header" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ControlMouseOverBackground}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ControlMouseOverBorderBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ControlSelectedBackground}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ControlSelectedBorderBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ControlDefaultBackground}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ControlDefaultBorderBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_- -->
</ResourceDictionary>